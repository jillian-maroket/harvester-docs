"use strict";(self.webpackChunkharvester_docs=self.webpackChunkharvester_docs||[]).push([[73325],{17365:(e,t)=>{function a(e,t){return e.format?e.format:e.allOf?"string"==typeof e.allOf[0]&&e.allOf[0].includes("circular")?e.allOf[0]:"object":e.oneOf||e.anyOf?"object":"object"===e.type?null!==(s=null===(a=e.xml)||void 0===a?void 0:a.name)&&void 0!==s?s:e.type:"array"===e.type?null!==(n=null===(i=e.xml)||void 0===i?void 0:i.name)&&void 0!==n?n:e.type:null!==(r=e.title)&&void 0!==r?r:e.type;var a,s,i,n,r}t.A4=t.uc=void 0,t.uc=function(e,t){return e.items?a(e.items)+"[]":null!==(s=a(e))&&void 0!==s?s:"";var s},t.A4=function e(t){if(!t)return;if(t.items&&void 0===t.minItems&&void 0===t.maxItems)return e(t.items);let a=[];if(t.items&&t.items.enum&&t.items.enum&&a.push(`[${t.items.enum.map((e=>`\`${e}\``)).join(", ")}]`),t.minLength||t.maxLength){let e,s,i="";t.minLength&&t.minLength>1&&(e=`\`>= ${t.minLength} characters\``),t.minLength&&1===t.minLength&&(e="`non-empty`"),t.maxLength&&(s=`\`<= ${t.maxLength} characters\``),e&&!s&&(i+=e),s&&!e&&(i+=s),e&&s&&(i+=`${e} and ${s}`),a.push(i)}if(t.minimum||t.maximum||"number"==typeof t.exclusiveMinimum||"number"==typeof t.exclusiveMaximum){let e,s,i="";"number"==typeof t.exclusiveMinimum?e=`\`> ${t.exclusiveMinimum}\``:t.minimum&&!t.exclusiveMinimum?e=`\`>= ${t.minimum}\``:t.minimum&&!0===t.exclusiveMinimum&&(e=`\`> ${t.minimum}\``),"number"==typeof t.exclusiveMaximum?s=`\`< ${t.exclusiveMaximum}\``:t.maximum&&!t.exclusiveMaximum?s=`\`<= ${t.maximum}\``:t.maximum&&!0===t.exclusiveMaximum&&(s=`\`< ${t.maximum}\``),e&&!s&&(i+=e),s&&!e&&(i+=s),e&&s&&(i+=`${e} and ${s}`),a.push(i)}t.pattern&&a.push(`Value must match regular expression \`${t.pattern}\``);const s=t;if(s.mapping){const e=Object.keys(s.mapping);a.push(`[${e.map((e=>`\`${e}\``)).join(", ")}]`)}return t.enum&&a.push(`[${t.enum.map((e=>`\`${e}\``)).join(", ")}]`),t.minItems&&a.push(`\`>= ${t.minItems}\``),t.maxItems&&a.push(`\`<= ${t.maxItems}\``),0!==a.length?"**Possible values:** "+a.join(", "):void 0}},99473:(e,t,a)=>{a.d(t,{Z:()=>d});var s=a(85893),i=(a(67294),a(47600)),n=a(48951),r=a(50551),l=a(86010),m=a(46671),o=a(17365),p=a(44739),c=a(42889),u=a(85956);const d=function({param:{description:e,example:t,examples:a,name:d,required:y,schema:g,deprecated:h}}){g&&(null==g?void 0:g.type)||(g={type:"any"});const f=(0,p.lo)(g,(e=>(0,s.jsxs)("span",{className:"openapi-schema__type",children:[" ",(0,o.uc)(e)]}))),k=(0,p.lo)(y,(()=>(0,s.jsx)("span",{className:"openapi-schema__required",children:"required"}))),b=(0,p.lo)(h,(()=>(0,s.jsx)("span",{className:"openapi-schema__deprecated",children:"deprecated"}))),x=(0,p.lo)((0,o.A4)(g),(e=>(0,s.jsx)("div",{children:(0,s.jsx)(c.D,{children:(0,m.T)(e),rehypePlugins:[u.Z]})}))),v=(0,p.lo)(e,(e=>(0,s.jsx)("div",{children:(0,s.jsx)(c.D,{children:(0,m.T)(e),components:{pre:"div",code({node:e,inline:t,className:a,children:n,...r}){const l=/language-(\w+)/.exec(a||"");return t?(0,s.jsx)("code",{children:n}):!t&&l?(0,s.jsx)(i.Z,{className:a,children:n}):(0,s.jsx)(i.Z,{children:n})}},rehypePlugins:[u.Z]})}))),j=(0,p.lo)(g&&g.items?g.items.default:g?g.default:void 0,(e=>(0,s.jsx)("div",{children:(0,s.jsx)(c.D,{children:`**Default value:** \`${e}\``})}))),T=(0,p.lo)((0,p.toString)(t),(e=>(0,s.jsxs)("div",{children:[(0,s.jsx)("strong",{children:"Example: "}),e]}))),q=(0,p.lo)(a,(e=>{const t=Object.entries(e);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("strong",{children:"Examples:"}),(0,s.jsx)(n.default,{children:t.map((([e,t])=>(0,s.jsxs)(r.default,{value:e,label:e,children:[t.summary&&(0,s.jsx)("p",{children:t.summary}),t.description&&(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Description: "}),(0,s.jsx)("span",{children:t.description})]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Example: "}),(0,s.jsx)("code",{children:t.value})]})]})))})]})}));return(0,s.jsxs)("div",{className:"openapi-params__list-item",children:[(0,s.jsxs)("span",{className:"openapi-schema__container",children:[(0,s.jsx)("strong",{className:(0,l.default)("openapi-schema__property",{"openapi-schema__strikethrough":h}),children:d}),f,(y||h)&&(0,s.jsx)("span",{className:"openapi-schema__divider"}),k,b]}),x,j,v,T,q]})}},19047:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>y,default:()=>x,frontMatter:()=>d,metadata:()=>g,toc:()=>f});a(67294);var s=a(3905),i=a(54734),n=a(90238),r=a.n(n),l=a(36765),m=a(99473),o=a(50690),p=a(88337),c=a(48951),u=a(50551);const d={id:"list-persistent-volume-claim-for-all-namespaces",title:"List Persistent Volume Claims For All Namespaces",description:"Get a list of all PersistentVolumeClaim objects.",sidebar_label:"List Persistent Volume Claims For All Namespaces",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"api/harvester-apis",custom_edit_url:null},y=void 0,g={unversionedId:"api/list-persistent-volume-claim-for-all-namespaces",id:"api/list-persistent-volume-claim-for-all-namespaces",title:"List Persistent Volume Claims For All Namespaces",description:"Get a list of all PersistentVolumeClaim objects.",source:"@site/docs/api/list-persistent-volume-claim-for-all-namespaces.api.mdx",sourceDirName:"api",slug:"/api/list-persistent-volume-claim-for-all-namespaces",permalink:"/v1.5/api/list-persistent-volume-claim-for-all-namespaces",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"list-persistent-volume-claim-for-all-namespaces",title:"List Persistent Volume Claims For All Namespaces",description:"Get a list of all PersistentVolumeClaim objects.",sidebar_label:"List Persistent Volume Claims For All Namespaces",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"api/harvester-apis",custom_edit_url:null},sidebar:"api",previous:{title:"List Node Networks",permalink:"/v1.5/api/list-node-network"},next:{title:"List Support Bundles For All Namespaces",permalink:"/v1.5/api/list-support-bundle-for-all-namespaces"}},h={},f=[{value:"Request",id:"request",level:2}],k={toc:f},b="wrapper";function x({components:e,...t}){return(0,s.kt)(b,{...k,...t,components:e,mdxType:"MDXLayout"},(0,s.kt)("h1",{className:"openapi__heading"},"List Persistent Volume Claims For All Namespaces"),(0,s.kt)(r(),{method:"get",path:"/api/v1/persistentvolumeclaims",mdxType:"MethodEndpoint"}),(0,s.kt)("p",null,"Get a list of all PersistentVolumeClaim objects."),(0,s.kt)("h2",{id:"request"},"Request"),(0,s.kt)("details",{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{}},(0,s.kt)("h3",{className:"openapi-markdown__details-summary-header-params"},"Query Parameters")),(0,s.kt)("div",null,(0,s.kt)("ul",null,(0,s.kt)(m.Z,{className:"paramsItem",param:{name:"continue",in:"query",description:"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,s.kt)(m.Z,{className:"paramsItem",param:{name:"fieldSelector",in:"query",description:"A selector to restrict the list of returned objects by their fields. Defaults to everything.",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,s.kt)(m.Z,{className:"paramsItem",param:{name:"includeUninitialized",in:"query",description:"If true, partially initialized resources are included in the response.",schema:{type:"boolean"}},mdxType:"ParamsItem"}),(0,s.kt)(m.Z,{className:"paramsItem",param:{name:"labelSelector",in:"query",description:"A selector to restrict the list of returned objects by their labels. Defaults to everything",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,s.kt)(m.Z,{className:"paramsItem",param:{name:"limit",in:"query",description:"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",schema:{type:"integer"}},mdxType:"ParamsItem"}),(0,s.kt)(m.Z,{className:"paramsItem",param:{name:"resourceVersion",in:"query",description:"When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,s.kt)(m.Z,{className:"paramsItem",param:{name:"timeoutSeconds",in:"query",description:"TimeoutSeconds for the list/watch call.",schema:{type:"integer"}},mdxType:"ParamsItem"}),(0,s.kt)(m.Z,{className:"paramsItem",param:{name:"watch",in:"query",description:"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",schema:{type:"boolean"}},mdxType:"ParamsItem"})))),(0,s.kt)("div",null,(0,s.kt)("div",null,(0,s.kt)(i.Z,{label:void 0,id:void 0,mdxType:"ApiTabs"},(0,s.kt)(u.default,{label:"200",value:"200",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"OK")),(0,s.kt)("div",null,(0,s.kt)(l.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(u.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(c.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(u.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(p.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"items",required:!0,schemaName:"object[]",qualifierMessage:void 0,schema:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"k8s.io.v1.PersistentVolumeClaimSpec"}]},status:{default:{},allOf:[{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},allocatedResources:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},capacity:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},conditions:{type:"array",items:{default:{},allOf:[{type:"object",required:["status","type"],properties:{lastProbeTime:{default:{},allOf:[{type:"string",default:"",title:"k8s.io.v1.Time"}]},lastTransitionTime:{default:{},allOf:[{type:"string",default:"",title:"k8s.io.v1.Time"}]},message:{type:"string"},reason:{type:"string"},status:{type:"string",default:""},type:{type:"string",default:""}},title:"k8s.io.v1.PersistentVolumeClaimCondition"}]},"x-kubernetes-patch-merge-key":"type","x-kubernetes-patch-strategy":"merge"},phase:{type:"string",enum:["Bound","Lost","Pending"]},resizeStatus:{type:"string"}},title:"k8s.io.v1.PersistentVolumeClaimStatus"}]}},title:"k8s.io.v1.PersistentVolumeClaim"}]}},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,s.kt)("span",{className:"openapi-schema__name"}," object"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)(p.Z,{collapsible:!1,name:"continue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"remainingItemCount",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"resourceVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"selfLink",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}))))))),(0,s.kt)(u.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(o.Z,{responseExample:'{\n  "apiVersion": "string",\n  "items": [\n    {\n      "apiVersion": "string",\n      "kind": "string",\n      "metadata": {\n        "name": "string",\n        "namespace": "string"\n      },\n      "spec": {\n        "accessModes": [\n          "string"\n        ],\n        "dataSource": {\n          "apiGroup": "string",\n          "kind": "string",\n          "name": "string"\n        },\n        "dataSourceRef": {\n          "apiGroup": "string",\n          "kind": "string",\n          "name": "string",\n          "namespace": "string"\n        },\n        "resources": {\n          "claims": [\n            {\n              "name": "string"\n            }\n          ],\n          "limits": {},\n          "requests": {}\n        },\n        "selector": {\n          "matchExpressions": [\n            {\n              "key": "string",\n              "operator": "string",\n              "values": [\n                "string"\n              ]\n            }\n          ],\n          "matchLabels": {}\n        },\n        "storageClassName": "string",\n        "volumeMode": "string",\n        "volumeName": "string"\n      },\n      "status": {\n        "accessModes": [\n          "string"\n        ],\n        "allocatedResources": {},\n        "capacity": {},\n        "conditions": [\n          {\n            "lastProbeTime": {},\n            "lastTransitionTime": {},\n            "message": "string",\n            "reason": "string",\n            "status": "string",\n            "type": "string"\n          }\n        ],\n        "phase": "Bound",\n        "resizeStatus": "string"\n      }\n    }\n  ],\n  "kind": "string",\n  "metadata": {\n    "continue": "string",\n    "remainingItemCount": 0,\n    "resourceVersion": "string",\n    "selfLink": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"})))),(0,s.kt)(u.default,{label:"application/json;stream=watch",value:"application/json;stream=watch",mdxType:"TabItem"},(0,s.kt)(c.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(u.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(p.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"items",required:!0,schemaName:"object[]",qualifierMessage:void 0,schema:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"k8s.io.v1.PersistentVolumeClaimSpec"}]},status:{default:{},allOf:[{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},allocatedResources:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},capacity:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},conditions:{type:"array",items:{default:{},allOf:[{type:"object",required:["status","type"],properties:{lastProbeTime:{default:{},allOf:[{type:"string",default:"",title:"k8s.io.v1.Time"}]},lastTransitionTime:{default:{},allOf:[{type:"string",default:"",title:"k8s.io.v1.Time"}]},message:{type:"string"},reason:{type:"string"},status:{type:"string",default:""},type:{type:"string",default:""}},title:"k8s.io.v1.PersistentVolumeClaimCondition"}]},"x-kubernetes-patch-merge-key":"type","x-kubernetes-patch-strategy":"merge"},phase:{type:"string",enum:["Bound","Lost","Pending"]},resizeStatus:{type:"string"}},title:"k8s.io.v1.PersistentVolumeClaimStatus"}]}},title:"k8s.io.v1.PersistentVolumeClaim"}]}},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,s.kt)("span",{className:"openapi-schema__name"}," object"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)(p.Z,{collapsible:!1,name:"continue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"remainingItemCount",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"resourceVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"selfLink",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}))))))),(0,s.kt)(u.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(o.Z,{responseExample:'{\n  "apiVersion": "string",\n  "items": [\n    {\n      "apiVersion": "string",\n      "kind": "string",\n      "metadata": {\n        "name": "string",\n        "namespace": "string"\n      },\n      "spec": {\n        "accessModes": [\n          "string"\n        ],\n        "dataSource": {\n          "apiGroup": "string",\n          "kind": "string",\n          "name": "string"\n        },\n        "dataSourceRef": {\n          "apiGroup": "string",\n          "kind": "string",\n          "name": "string",\n          "namespace": "string"\n        },\n        "resources": {\n          "claims": [\n            {\n              "name": "string"\n            }\n          ],\n          "limits": {},\n          "requests": {}\n        },\n        "selector": {\n          "matchExpressions": [\n            {\n              "key": "string",\n              "operator": "string",\n              "values": [\n                "string"\n              ]\n            }\n          ],\n          "matchLabels": {}\n        },\n        "storageClassName": "string",\n        "volumeMode": "string",\n        "volumeName": "string"\n      },\n      "status": {\n        "accessModes": [\n          "string"\n        ],\n        "allocatedResources": {},\n        "capacity": {},\n        "conditions": [\n          {\n            "lastProbeTime": {},\n            "lastTransitionTime": {},\n            "message": "string",\n            "reason": "string",\n            "status": "string",\n            "type": "string"\n          }\n        ],\n        "phase": "Bound",\n        "resizeStatus": "string"\n      }\n    }\n  ],\n  "kind": "string",\n  "metadata": {\n    "continue": "string",\n    "remainingItemCount": 0,\n    "resourceVersion": "string",\n    "selfLink": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"})))),(0,s.kt)(u.default,{label:"application/yaml",value:"application/yaml",mdxType:"TabItem"},(0,s.kt)(c.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(u.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(p.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"items",required:!0,schemaName:"object[]",qualifierMessage:void 0,schema:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},dataSource:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.TypedLocalObjectReference"},dataSourceRef:{type:"object",required:["kind","name"],properties:{apiGroup:{type:"string"},kind:{type:"string",default:""},name:{type:"string",default:""},namespace:{type:"string"}},title:"k8s.io.v1.TypedObjectReference"},resources:{default:{},allOf:[{type:"object",properties:{claims:{type:"array",items:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string",default:""}},title:"k8s.io.v1.ResourceClaim"}]},"x-kubernetes-list-map-keys":["name"],"x-kubernetes-list-type":"map"},limits:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},requests:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}}},title:"k8s.io.v1.ResourceRequirements"}]},selector:{type:"object",properties:{matchExpressions:{type:"array",items:{default:{},allOf:[{type:"object",required:["key","operator"],properties:{key:{type:"string",default:"","x-kubernetes-patch-merge-key":"key","x-kubernetes-patch-strategy":"merge"},operator:{type:"string",default:""},values:{type:"array",items:{type:"string",default:""}}},title:"k8s.io.v1.LabelSelectorRequirement"}]}},matchLabels:{type:"object",additionalProperties:{type:"string",default:""}}},"x-kubernetes-map-type":"atomic",title:"k8s.io.v1.LabelSelector"},storageClassName:{type:"string"},volumeMode:{type:"string"},volumeName:{type:"string"}},title:"k8s.io.v1.PersistentVolumeClaimSpec"}]},status:{default:{},allOf:[{type:"object",properties:{accessModes:{type:"array",items:{type:"string",default:""}},allocatedResources:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},capacity:{type:"object",additionalProperties:{default:{},allOf:[{type:"string",title:"k8s.io.apimachinery.pkg.api.resource.Quantity"}]}},conditions:{type:"array",items:{default:{},allOf:[{type:"object",required:["status","type"],properties:{lastProbeTime:{default:{},allOf:[{type:"string",default:"",title:"k8s.io.v1.Time"}]},lastTransitionTime:{default:{},allOf:[{type:"string",default:"",title:"k8s.io.v1.Time"}]},message:{type:"string"},reason:{type:"string"},status:{type:"string",default:""},type:{type:"string",default:""}},title:"k8s.io.v1.PersistentVolumeClaimCondition"}]},"x-kubernetes-patch-merge-key":"type","x-kubernetes-patch-strategy":"merge"},phase:{type:"string",enum:["Bound","Lost","Pending"]},resizeStatus:{type:"string"}},title:"k8s.io.v1.PersistentVolumeClaimStatus"}]}},title:"k8s.io.v1.PersistentVolumeClaim"}]}},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,s.kt)("span",{className:"openapi-schema__name"}," object"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)(p.Z,{collapsible:!1,name:"continue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"remainingItemCount",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"resourceVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"selfLink",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}))))))),(0,s.kt)(u.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(o.Z,{responseExample:'{\n  "apiVersion": "string",\n  "items": [\n    {\n      "apiVersion": "string",\n      "kind": "string",\n      "metadata": {\n        "name": "string",\n        "namespace": "string"\n      },\n      "spec": {\n        "accessModes": [\n          "string"\n        ],\n        "dataSource": {\n          "apiGroup": "string",\n          "kind": "string",\n          "name": "string"\n        },\n        "dataSourceRef": {\n          "apiGroup": "string",\n          "kind": "string",\n          "name": "string",\n          "namespace": "string"\n        },\n        "resources": {\n          "claims": [\n            {\n              "name": "string"\n            }\n          ],\n          "limits": {},\n          "requests": {}\n        },\n        "selector": {\n          "matchExpressions": [\n            {\n              "key": "string",\n              "operator": "string",\n              "values": [\n                "string"\n              ]\n            }\n          ],\n          "matchLabels": {}\n        },\n        "storageClassName": "string",\n        "volumeMode": "string",\n        "volumeName": "string"\n      },\n      "status": {\n        "accessModes": [\n          "string"\n        ],\n        "allocatedResources": {},\n        "capacity": {},\n        "conditions": [\n          {\n            "lastProbeTime": {},\n            "lastTransitionTime": {},\n            "message": "string",\n            "reason": "string",\n            "status": "string",\n            "type": "string"\n          }\n        ],\n        "phase": "Bound",\n        "resizeStatus": "string"\n      }\n    }\n  ],\n  "kind": "string",\n  "metadata": {\n    "continue": "string",\n    "remainingItemCount": 0,\n    "resourceVersion": "string",\n    "selfLink": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,s.kt)(u.default,{label:"401",value:"401",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"Unauthorized")),(0,s.kt)("div",null,(0,s.kt)(l.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(u.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(c.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(u.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"string"))))))),(0,s.kt)(u.default,{label:"application/json;stream=watch",value:"application/json;stream=watch",mdxType:"TabItem"},(0,s.kt)(c.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(u.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"string"))))))),(0,s.kt)(u.default,{label:"application/yaml",value:"application/yaml",mdxType:"TabItem"},(0,s.kt)(c.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(u.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"string"))))))))))))))}x.isMDXComponent=!0}}]);