"use strict";(self.webpackChunkharvester_docs=self.webpackChunkharvester_docs||[]).push([[2489],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>v});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var m=n.createContext({}),s=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(m.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,m=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(a),c=r,v=p["".concat(m,".").concat(c)]||p[c]||d[c]||o;return a?n.createElement(v,i(i({ref:t},u),{},{components:a})):n.createElement(v,i({ref:t},u))}));function v(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=c;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},54704:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>s});a(67294);var n=a(3905),r=a(25108);const o={id:"index",sidebar_position:1,sidebar_label:"Create a Volume",title:"Create a Volume",keywords:["Volume"],description:"Create a volume from the Volume page."},i=void 0,l={unversionedId:"volume/index",id:"version-v1.4/volume/index",title:"Create a Volume",description:"Create a volume from the Volume page.",source:"@site/versioned_docs/version-v1.4/volume/create-volume.md",sourceDirName:"volume",slug:"/volume/index",permalink:"/v1.4/volume/index",draft:!1,editUrl:"https://github.com/harvester/docs/edit/main/versioned_docs/version-v1.4/volume/create-volume.md",tags:[],version:"v1.4",lastUpdatedAt:1732780556,formattedLastUpdatedAt:"Nov 28, 2024",sidebarPosition:1,frontMatter:{id:"index",sidebar_position:1,sidebar_label:"Create a Volume",title:"Create a Volume",keywords:["Volume"],description:"Create a volume from the Volume page."},sidebar:"api",previous:{title:"CPU Pinning",permalink:"/v1.4/vm/cpu-pinning"},next:{title:"Edit a Volume",permalink:"/v1.4/volume/edit-volume"}},m={},s=[{value:"Create an Empty Volume",id:"create-an-empty-volume",level:2},{value:"Header Section",id:"header-section",level:3},{value:"Basics Tab",id:"basics-tab",level:3},{value:"Create an Image Volume",id:"create-an-image-volume",level:2},{value:"Header Section",id:"header-section-1",level:3},{value:"Basics Tab",id:"basics-tab-1",level:3}],u=e=>function(t){return r.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",t)},p=u("Tabs"),d=u("TabItem"),c={toc:s},v="wrapper";function h({components:e,...t}){return(0,n.kt)(v,{...c,...t,components:e,mdxType:"MDXLayout"},(0,n.kt)("head",null,(0,n.kt)("link",{rel:"canonical",href:"https://docs.harvesterhci.io/v1.4/volume/index"})),(0,n.kt)("h2",{id:"create-an-empty-volume"},"Create an Empty Volume"),(0,n.kt)(p,{mdxType:"Tabs"},(0,n.kt)(d,{value:"ui",label:"UI",default:!0,mdxType:"TabItem"},(0,n.kt)("h3",{id:"header-section"},"Header Section"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Set the Volume ",(0,n.kt)("inlineCode",{parentName:"li"},"Name"),"."),(0,n.kt)("li",{parentName:"ol"},"(Optional) Provide a ",(0,n.kt)("inlineCode",{parentName:"li"},"Description")," for the Volume.")),(0,n.kt)("h3",{id:"basics-tab"},"Basics Tab"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Choose ",(0,n.kt)("inlineCode",{parentName:"li"},"New")," in ",(0,n.kt)("inlineCode",{parentName:"li"},"Source"),"."),(0,n.kt)("li",{parentName:"ol"},"Select an existing ",(0,n.kt)("inlineCode",{parentName:"li"},"StorageClass"),"."),(0,n.kt)("li",{parentName:"ol"},"Configure the ",(0,n.kt)("inlineCode",{parentName:"li"},"Size")," of the volume.")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"create-empty-volume",src:a(73551).Z,width:"2560",height:"726"}))),(0,n.kt)(d,{value:"api",label:"API",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  annotations:\n    volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\n    volume.kubernetes.io/storage-provisioner: driver.longhorn.io\n  name: my-vol\n  namespace: default\nspec:\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 10Gi\n  volumeMode: Block\n  volumeName: pvc-my-vol\n"))),(0,n.kt)(d,{value:"terraform",label:"Terraform",mdxType:"TabItem"},(0,n.kt)("p",null,"To create an empty volume on Harvester with Terraform using the ",(0,n.kt)("a",{parentName:"p",href:"https://registry.terraform.io/providers/harvester/harvester/latest"},"Harvester Terraform Provider"),", define a ",(0,n.kt)("inlineCode",{parentName:"p"},"harvester_volume")," resource block:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-hcl"},'resource "harvester_volume" "empty-volume" {\n  name      = "empty-volume"\n  namespace = "default"\n\n  size = "10Gi"\n}\n')))),(0,n.kt)("h2",{id:"create-an-image-volume"},"Create an Image Volume"),(0,n.kt)(p,{mdxType:"Tabs"},(0,n.kt)(d,{value:"ui",label:"UI",mdxType:"TabItem"},(0,n.kt)("h3",{id:"header-section-1"},"Header Section"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Set the Volume ",(0,n.kt)("inlineCode",{parentName:"li"},"Name"),"."),(0,n.kt)("li",{parentName:"ol"},"(Optional) Provide a ",(0,n.kt)("inlineCode",{parentName:"li"},"Description")," for the Volume.")),(0,n.kt)("h3",{id:"basics-tab-1"},"Basics Tab"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Choose ",(0,n.kt)("inlineCode",{parentName:"li"},"VM Image")," in ",(0,n.kt)("inlineCode",{parentName:"li"},"Source"),"."),(0,n.kt)("li",{parentName:"ol"},"Select an existing ",(0,n.kt)("inlineCode",{parentName:"li"},"Image"),"."),(0,n.kt)("li",{parentName:"ol"},"Configure the ",(0,n.kt)("inlineCode",{parentName:"li"},"Size")," of the volume.")),(0,n.kt)("admonition",{title:"important",type:"info"},(0,n.kt)("p",{parentName:"admonition"},"When creating volumes from a VM image, ensure that the volume size is greater than or equal to the image size. The volume may become corrupted if the configured volume size is less than the size of the underlying image. This is particularly important for qcow2 images because the virtual size is typically greater than the physical size."),(0,n.kt)("p",{parentName:"admonition"},"By default, Harvester will set the volume size to the virtual size of the image.")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"create-image-volume",src:a(13987).Z,width:"2560",height:"726"}))),(0,n.kt)(d,{value:"api",label:"API",mdxType:"TabItem"},(0,n.kt)("p",null,"Create a volume, initialized with the contents of the image ",(0,n.kt)("inlineCode",{parentName:"p"},"image-8rb2z")," from the namespace ",(0,n.kt)("inlineCode",{parentName:"p"},"default"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  annotations:\n    harvesterhci.io/imageId: default/image-8rb2z\n    volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io\n    volume.kubernetes.io/storage-provisioner: driver.longhorn.io\n  name: foobar\n  namespace: default\nspec:\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 5Gi\n  storageClassName: longhorn-image-8rb2z\n  volumeMode: Block\n  volumeName: pvc-foobar\n"))),(0,n.kt)(d,{value:"terraform",label:"Terraform",mdxType:"TabItem"},(0,n.kt)("p",null,"To create a volume on Harvester using Terraform and initialize it with the contents of an\nimage, define a ",(0,n.kt)("inlineCode",{parentName:"p"},"harvester_volume")," resource block and set the ",(0,n.kt)("inlineCode",{parentName:"p"},"image")," property:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-hcl"},'resource "harvester_volume" "opensuse154-image-disk" {\n  name      = "opensuse154-image-disk"\n  namespace = "default"\n\n  size  = "10Gi"\n  image = harvester_image.opensuse154.id\n}\n')))))}h.isMDXComponent=!0},73551:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/create-empty-volume-e64eb8d677034412d1b394dda137a8ad.png"},13987:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/create-image-volume-ad01408a1eaa69454a211039f3de6c36.png"}}]);