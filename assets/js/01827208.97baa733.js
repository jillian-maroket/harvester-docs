"use strict";(self.webpackChunkharvester_docs=self.webpackChunkharvester_docs||[]).push([[1136],{17365:(e,t)=>{function a(e,t){return e.format?e.format:e.allOf?"string"==typeof e.allOf[0]&&e.allOf[0].includes("circular")?e.allOf[0]:"object":e.oneOf||e.anyOf?"object":"object"===e.type?null!==(s=null===(a=e.xml)||void 0===a?void 0:a.name)&&void 0!==s?s:e.type:"array"===e.type?null!==(i=null===(n=e.xml)||void 0===n?void 0:n.name)&&void 0!==i?i:e.type:null!==(r=e.title)&&void 0!==r?r:e.type;var a,s,n,i,r}t.A4=t.uc=void 0,t.uc=function(e,t){return e.items?a(e.items)+"[]":null!==(s=a(e))&&void 0!==s?s:"";var s},t.A4=function e(t){if(!t)return;if(t.items&&void 0===t.minItems&&void 0===t.maxItems)return e(t.items);let a=[];if(t.items&&t.items.enum&&t.items.enum&&a.push(`[${t.items.enum.map((e=>`\`${e}\``)).join(", ")}]`),t.minLength||t.maxLength){let e,s,n="";t.minLength&&t.minLength>1&&(e=`\`>= ${t.minLength} characters\``),t.minLength&&1===t.minLength&&(e="`non-empty`"),t.maxLength&&(s=`\`<= ${t.maxLength} characters\``),e&&!s&&(n+=e),s&&!e&&(n+=s),e&&s&&(n+=`${e} and ${s}`),a.push(n)}if(t.minimum||t.maximum||"number"==typeof t.exclusiveMinimum||"number"==typeof t.exclusiveMaximum){let e,s,n="";"number"==typeof t.exclusiveMinimum?e=`\`> ${t.exclusiveMinimum}\``:t.minimum&&!t.exclusiveMinimum?e=`\`>= ${t.minimum}\``:t.minimum&&!0===t.exclusiveMinimum&&(e=`\`> ${t.minimum}\``),"number"==typeof t.exclusiveMaximum?s=`\`< ${t.exclusiveMaximum}\``:t.maximum&&!t.exclusiveMaximum?s=`\`<= ${t.maximum}\``:t.maximum&&!0===t.exclusiveMaximum&&(s=`\`< ${t.maximum}\``),e&&!s&&(n+=e),s&&!e&&(n+=s),e&&s&&(n+=`${e} and ${s}`),a.push(n)}t.pattern&&a.push(`Value must match regular expression \`${t.pattern}\``);const s=t;if(s.mapping){const e=Object.keys(s.mapping);a.push(`[${e.map((e=>`\`${e}\``)).join(", ")}]`)}return t.enum&&a.push(`[${t.enum.map((e=>`\`${e}\``)).join(", ")}]`),t.minItems&&a.push(`\`>= ${t.minItems}\``),t.maxItems&&a.push(`\`<= ${t.maxItems}\``),0!==a.length?"**Possible values:** "+a.join(", "):void 0}},99473:(e,t,a)=>{a.d(t,{Z:()=>u});var s=a(85893),n=(a(67294),a(47600)),i=a(48951),r=a(50551),m=a(86010),l=a(46671),o=a(17365),p=a(44739),d=a(42889),c=a(85956);const u=function({param:{description:e,example:t,examples:a,name:u,required:y,schema:h,deprecated:g}}){h&&(null==h?void 0:h.type)||(h={type:"any"});const k=(0,p.lo)(h,(e=>(0,s.jsxs)("span",{className:"openapi-schema__type",children:[" ",(0,o.uc)(e)]}))),f=(0,p.lo)(y,(()=>(0,s.jsx)("span",{className:"openapi-schema__required",children:"required"}))),v=(0,p.lo)(g,(()=>(0,s.jsx)("span",{className:"openapi-schema__deprecated",children:"deprecated"}))),b=(0,p.lo)((0,o.A4)(h),(e=>(0,s.jsx)("div",{children:(0,s.jsx)(d.D,{children:(0,l.T)(e),rehypePlugins:[c.Z]})}))),N=(0,p.lo)(e,(e=>(0,s.jsx)("div",{children:(0,s.jsx)(d.D,{children:(0,l.T)(e),components:{pre:"div",code({node:e,inline:t,className:a,children:i,...r}){const m=/language-(\w+)/.exec(a||"");return t?(0,s.jsx)("code",{children:i}):!t&&m?(0,s.jsx)(n.Z,{className:a,children:i}):(0,s.jsx)(n.Z,{children:i})}},rehypePlugins:[c.Z]})}))),x=(0,p.lo)(h&&h.items?h.items.default:h?h.default:void 0,(e=>(0,s.jsx)("div",{children:(0,s.jsx)(d.D,{children:`**Default value:** \`${e}\``})}))),w=(0,p.lo)((0,p.toString)(t),(e=>(0,s.jsxs)("div",{children:[(0,s.jsx)("strong",{children:"Example: "}),e]}))),I=(0,p.lo)(a,(e=>{const t=Object.entries(e);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("strong",{children:"Examples:"}),(0,s.jsx)(i.default,{children:t.map((([e,t])=>(0,s.jsxs)(r.default,{value:e,label:e,children:[t.summary&&(0,s.jsx)("p",{children:t.summary}),t.description&&(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Description: "}),(0,s.jsx)("span",{children:t.description})]}),(0,s.jsxs)("p",{children:[(0,s.jsx)("strong",{children:"Example: "}),(0,s.jsx)("code",{children:t.value})]})]})))})]})}));return(0,s.jsxs)("div",{className:"openapi-params__list-item",children:[(0,s.jsxs)("span",{className:"openapi-schema__container",children:[(0,s.jsx)("strong",{className:(0,m.default)("openapi-schema__property",{"openapi-schema__strikethrough":g}),children:u}),k,(y||g)&&(0,s.jsx)("span",{className:"openapi-schema__divider"}),f,v]}),b,x,N,w,I]})}},27589:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>g,contentTitle:()=>y,default:()=>b,frontMatter:()=>u,metadata:()=>h,toc:()=>k});a(67294);var s=a(3905),n=a(54734),i=a(90238),r=a.n(i),m=a(36765),l=a(99473),o=a(50690),p=a(88337),d=a(48951),c=a(50551);const u={id:"list-namespaced-node-network",title:"List Namespaced Node Networks",description:"Get a list of NodeNetwork objects in a namespace.",sidebar_label:"List Namespaced Node Networks",hide_title:!0,hide_table_of_contents:!0,api:"eJztW1tz3LYV/isYPNkdeiWnnk6rTh9sJ5NqmjiZSE4fbM3kLHm4RAQCDHC40lqz/71zAJDLvVq7VtrMlE+SyAPgO/cPFPAgCWZeXnyQ75DurLv18iaTBfrcqYaUNfJCfoskQGjlSdhSvLMFJllhp79iTl4oI0AYqNE3kONEZtI26IDHXxbyQvLYd93rYjCDzGQDDmokdIziQfIs8kLm1pAyLcpMKsbwW4tuITeRXVcoOklhw1PhK9vqQkxReCRxV6ERDskpnCszE7V1KBz6VpMXpbO1oIol3RzdRFwpk6OgSnkxB92iUD69EwWWymCRiVwrNORFDQthjV6I1mOYpAcSh4bJQTQO58q2XgQN0tLiTlElVIGGVA46vVtZQjzD+xwbEqV1Ye44pS37RZ4LMMUAe4DjkN0hYBOKIlFY9MJYEg5zOzPqE07EZRknaDBXpcJiaxiPENqaGTp+pAo2J1VsjRYFWYH3jYpuFs9maNCB1gtRqnl4W6qSEI2olWkJ/XNhXcRWqlmbhuUVmBkKa4a6DH69U1qz0Rprimg1EK9enouf0NvW5fgNI8BCoHPWCWUKlQOxo4NHgqtE3XrW2xM44ufKxWDm6WxL684rFepiIq45BsLv0QwkfNs01hEWMabugPKK35FrcSLeDqIiLgRJpA8yDRFGwP0zOs/6R0s7pNYZLMR0MVSeXcxL18p7AWYhaluoMmhojec083mFNciLB0mLhvPGk1NmJpfLrE+loMUVaszJusP59Fr4JMf+Y5M5lUcDdenfQ+1yP0JWLlrLT8TXWEJILw6QOboFVcrMHotWmVy3Bb43yihSoNUnLA6D5jB2LWacPzxCL8RgbG9xL8ChSNMXXLJYrRhaHnfCm1qrEcwaPg1T1P8Fa4Z19lrzkcbUqlZ0GGQQ4TgGUcO9qttamLaeoovwonV8VICxhpKUukEOWocyEqqqIqy9wHvlKdtKYa7F/OyXLtF+SdmVMj/MVyNBAQS8GqTUoAp4IcMFvfWYikCYHmrsPJ0qaETJtT6WZIP3FJaOurAdJ+IKKVQIVoJ1j5Uz6oZ3ofxAFxy/teg55aG2rQnTRC2ftQ0v9gmdjU+edwGFcy45EKpWN7pzLgdgqTQhVyyuPJzgXT9JfWutpTQOPXJLsuWOKsUICu4XtTLYl+a1DscrwhyUhqlGVp09EqtUXlnrMdQXsl11S75gs4CbtXXQJVTeoFAwEuuW8PRTr6x7WYo+pFadpWtWGwooL7BuaLHeVcH7tk6eN/agQofKtCo3ivRH89Fcr+Jy1oIDQ8jRzUsxvs5TfV6GWt96jpceezDGFAf9m6xQ3rcxqlhY4ypD+j7TBdyLuJ7yGavXLZk7BGKCEYs8/2aZdmgMAVhSaoylcqGPhOBi3XhlLFaoBhWOe4Zvp56FDfUaFN1wnyzIvrI1kqqRdS/RcYRyFvrYsb3yxDN4A42vLGXBo2h86zrzQdduk3LJalHlkJg5MjHwNWiNTuRVa249RxIIrmtCg5t1jg4ZH6dnpRfCI4bAa6z3igMumS0E3DC/2qZgM4qiddEdYR0soj8Cl0qtN8VwHBxR34FPOUciRQTbZGD3MEtH4sCzg/NWhxXVKmx2dhNlCGfo1gp0z5m7It0AVVs1+ocIkYWD3aGlSvjcNpgJ3+YVuykwRYTaB4nG2WASmUl2NVMkeRG65N6+wUycCB0v+AFefDp/8beb9PPjxxc3f1rDvUFjDreYf3MOrWpBYnExNzlBMq59dz5xwRRONs9b14c9UOzubGs39CD0/X29VXZz9exrijNlDIeELUWlPFm3eCwn4RiwLV1hbk3hP7MlWZPtCTzHzdlK5UcHSBjyGfNGmmndyoA2rBnFpuscyBRdHacK65jgnhxCHcxZFFlKoSzJ1nYeusSAeIqr4MzFJpv9DIm64WBMhIIFvjo/5x8bsf4vmYXdHxrit9A0Oi189qtnkYftNWIOrwX7BwmNGoQnN2mZyVtlmE52TIM3u43jzSqpCGowajsmunlWb8A5WMjB8yIGobx4WGYStP6hDNvaRwMNAI9FFQbtetHreRqyEIRbYGJo7lhtVc12pZMkRZof3f7VT5SdzF9OYmH7Hgnk8maZSS4Sp0Lljwo74a7F1y7UKt/9vJtxR6nsAUqWjG8PqWzi545JBW7OnNBVuYo2mCLBy8ngkwjnVrIGAbXHBNW63lyAVEjYJ47XhCvpvWVv3udeOzA+LM71cKd5Wex9qDR7RWr0Hma73zkEv8ehK7ud4rZ1qSN8+LazN3uP4yfKX3590P4btT+TpXU1UHz056+GcM4Hs36nzO3Vpp69t6CISED/uOaa43NdmQLvH4OT3QW7E6kGttblETPtrjCb/mucrZXPW7tmhL7fxEDYHT1fnrEDByxjEXnqNIumT8bolNmXdI/201o8/X6+2WP6U1Iwk7zvf7P4HgzMkLek3cfjnU6Pwj9rMAfEjinNKY0NoSu5t3F2n1jaU7zcnDg+jXzKbr/VMuJX990VtwbFDPqSsH7L30M+GzF/eRUHrm8WdtZs1CWn1GOZw3fK97zhNGPyDGHyTYb590iH/xGp90g3R7o50s2Rbo50c6SbI90c6eZIN0e6+WR0cwG1HhnmyDBHhjkyzJFhjgxzZJgjwxwZ5sgwv4Rh8uhX5y+3iIJ8b/jciHXpROWx/2MfoD/+i+mewXv5by8f1KmRKsvnyGdI8ZxKJS/kGTTKn+0x0Fky0BmTHtMdbWe35K1TtLjiFWOMvAG/RpgqoqY7yBByLLxfZvINgkN3SDIKMGRlShskkx//2cETr3+8ZCDzLnZkQhoagPVUg1lxUslOFauj8+H0vXi30meDC/ZOPenQflKL8J7OGg0qlh8XXBSNHrg9r7vH7KxYUifyzd70N5msrCee4uFhCh7fO71c8uN4qoVzuVCej/UV8qIE7fGAduPB//Hg///1wf+dqXqLi/WrM2GRyDmOya7f+RrAAeybdxVOVODJrgQcgLrnosL/wuSfvStwQI3N+wwn4h+vEYzXCMZrBOM1gvEawRNfIzhUutPtrhNL9h/6WP4BtbfvHpxogMcf1T+AZutuwKne+EOd4j+gcHcjYaXnDf/hFCt65Dbu2U/p8+Bz8UV3XHbC7b5cmsUQbafG6l874V8TFULBe/sPD+n965z3YYORWx9JWO/+y8S331zL5fI/PbpPKQ==",sidebar_class_name:"get api-method",info_path:"version-v1.3/api/harvester-apis",custom_edit_url:null},y=void 0,h={unversionedId:"api/list-namespaced-node-network",id:"version-v1.3/api/list-namespaced-node-network",title:"List Namespaced Node Networks",description:"Get a list of NodeNetwork objects in a namespace.",source:"@site/versioned_docs/version-v1.3/api/list-namespaced-node-network.api.mdx",sourceDirName:"api",slug:"/api/list-namespaced-node-network",permalink:"/v1.3/api/list-namespaced-node-network",draft:!1,editUrl:null,tags:[],version:"v1.3",frontMatter:{id:"list-namespaced-node-network",title:"List Namespaced Node Networks",description:"Get a list of NodeNetwork objects in a namespace.",sidebar_label:"List Namespaced Node Networks",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"version-v1.3/api/harvester-apis",custom_edit_url:null},sidebar:"api",previous:{title:"List Namespaced Network Attachment Definitions",permalink:"/v1.3/api/list-namespaced-network-attachment-definition"},next:{title:"List Namespaced Persistent Volume Claims",permalink:"/v1.3/api/list-namespaced-persistent-volume-claim"}},g={},k=[{value:"Request",id:"request",level:2}],f={toc:k},v="wrapper";function b({components:e,...t}){return(0,s.kt)(v,{...f,...t,components:e,mdxType:"MDXLayout"},(0,s.kt)("h1",{className:"openapi__heading"},"List Namespaced Node Networks"),(0,s.kt)(r(),{method:"get",path:"/apis/network.harvesterhci.io/v1beta1/nodenetworks",mdxType:"MethodEndpoint"}),(0,s.kt)("p",null,"Get a list of NodeNetwork objects in a namespace."),(0,s.kt)("h2",{id:"request"},"Request"),(0,s.kt)("details",{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{}},(0,s.kt)("h3",{className:"openapi-markdown__details-summary-header-params"},"Path Parameters")),(0,s.kt)("div",null,(0,s.kt)("ul",null,(0,s.kt)(l.Z,{className:"paramsItem",param:{name:"namespace",in:"path",description:"Object name and auth scope, such as for teams and projects",required:!0,schema:{type:"string",pattern:"[a-z0-9][a-z0-9\\-]*"}},mdxType:"ParamsItem"})))),(0,s.kt)("details",{style:{marginBottom:"1rem"},className:"openapi-markdown__details","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{}},(0,s.kt)("h3",{className:"openapi-markdown__details-summary-header-params"},"Query Parameters")),(0,s.kt)("div",null,(0,s.kt)("ul",null,(0,s.kt)(l.Z,{className:"paramsItem",param:{name:"continue",in:"query",description:"The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server the server will respond with a 410 ResourceExpired error indicating the client must restart their list without the continue field. This field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications.",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,s.kt)(l.Z,{className:"paramsItem",param:{name:"fieldSelector",in:"query",description:"A selector to restrict the list of returned objects by their fields. Defaults to everything.",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,s.kt)(l.Z,{className:"paramsItem",param:{name:"includeUninitialized",in:"query",description:"If true, partially initialized resources are included in the response.",schema:{type:"boolean"}},mdxType:"ParamsItem"}),(0,s.kt)(l.Z,{className:"paramsItem",param:{name:"labelSelector",in:"query",description:"A selector to restrict the list of returned objects by their labels. Defaults to everything",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,s.kt)(l.Z,{className:"paramsItem",param:{name:"limit",in:"query",description:"limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.",schema:{type:"integer"}},mdxType:"ParamsItem"}),(0,s.kt)(l.Z,{className:"paramsItem",param:{name:"resourceVersion",in:"query",description:"When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,s.kt)(l.Z,{className:"paramsItem",param:{name:"timeoutSeconds",in:"query",description:"TimeoutSeconds for the list/watch call.",schema:{type:"integer"}},mdxType:"ParamsItem"}),(0,s.kt)(l.Z,{className:"paramsItem",param:{name:"watch",in:"query",description:"Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",schema:{type:"boolean"}},mdxType:"ParamsItem"})))),(0,s.kt)("div",null,(0,s.kt)("div",null,(0,s.kt)(n.Z,{label:void 0,id:void 0,mdxType:"ApiTabs"},(0,s.kt)(c.default,{label:"200",value:"200",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"OK")),(0,s.kt)("div",null,(0,s.kt)(m.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(c.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(d.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(c.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(p.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"items",required:!0,schemaName:"object[]",qualifierMessage:void 0,schema:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["nodeName"],properties:{description:{type:"string"},nic:{type:"string"},nodeName:{type:"string",default:""},type:{type:"string"}},title:"network.harvesterhci.io.v1beta1.NodeNetworkSpec"}]},status:{default:{},allOf:[{type:"object",properties:{conditions:{type:"array",items:{default:{},allOf:[{type:"object",required:["status","type"],properties:{lastTransitionTime:{type:"string"},lastUpdateTime:{type:"string"},message:{type:"string"},reason:{type:"string"},status:{type:"string",default:""},type:{type:"string",default:""}},title:"network.harvesterhci.io.v1beta1.Condition"}]}},networkIDs:{type:"array",items:{type:"integer",format:"int32",default:0}},networkLinkStatus:{type:"object",additionalProperties:{type:"object",required:["name"],properties:{index:{type:"integer",format:"int32"},mac:{type:"string"},masterIndex:{type:"integer",format:"int32"},name:{type:"string",default:""},promiscuous:{type:"boolean"},state:{type:"string"},type:{type:"string"}},title:"network.harvesterhci.io.v1beta1.LinkStatus"}},nics:{type:"array",items:{default:{},allOf:[{type:"object",required:["index","name","state","type"],properties:{index:{type:"integer",format:"int32",default:0},masterIndex:{type:"integer",format:"int32"},name:{type:"string",default:""},state:{type:"string",default:""},type:{type:"string",default:""},usedByManagementNetwork:{type:"boolean"},usedByVlanNetwork:{type:"boolean"}},title:"network.harvesterhci.io.v1beta1.NetworkInterface"}]}}},title:"network.harvesterhci.io.v1beta1.NodeNetworkStatus"}]}},title:"network.harvesterhci.io.v1beta1.NodeNetwork"}]}},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,s.kt)("span",{className:"openapi-schema__name"}," object"),(0,s.kt)("span",{className:"openapi-schema__divider"}),(0,s.kt)("span",{className:"openapi-schema__required"},"required"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)(p.Z,{collapsible:!1,name:"continue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"remainingItemCount",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"resourceVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"selfLink",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}))))))),(0,s.kt)(c.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(o.Z,{responseExample:'{\n  "apiVersion": "string",\n  "items": [\n    {\n      "apiVersion": "string",\n      "kind": "string",\n      "metadata": {\n        "name": "string",\n        "namespace": "string"\n      },\n      "spec": {\n        "description": "string",\n        "nic": "string",\n        "nodeName": "string",\n        "type": "string"\n      },\n      "status": {\n        "conditions": [\n          {\n            "lastTransitionTime": "string",\n            "lastUpdateTime": "string",\n            "message": "string",\n            "reason": "string",\n            "status": "string",\n            "type": "string"\n          }\n        ],\n        "networkIDs": [\n          0\n        ],\n        "networkLinkStatus": {},\n        "nics": [\n          {\n            "index": 0,\n            "masterIndex": 0,\n            "name": "string",\n            "state": "string",\n            "type": "string",\n            "usedByManagementNetwork": true,\n            "usedByVlanNetwork": true\n          }\n        ]\n      }\n    }\n  ],\n  "kind": "string",\n  "metadata": {\n    "continue": "string",\n    "remainingItemCount": 0,\n    "resourceVersion": "string",\n    "selfLink": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"})))),(0,s.kt)(c.default,{label:"application/json;stream=watch",value:"application/json;stream=watch",mdxType:"TabItem"},(0,s.kt)(d.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(c.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(p.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"items",required:!0,schemaName:"object[]",qualifierMessage:void 0,schema:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["nodeName"],properties:{description:{type:"string"},nic:{type:"string"},nodeName:{type:"string",default:""},type:{type:"string"}},title:"network.harvesterhci.io.v1beta1.NodeNetworkSpec"}]},status:{default:{},allOf:[{type:"object",properties:{conditions:{type:"array",items:{default:{},allOf:[{type:"object",required:["status","type"],properties:{lastTransitionTime:{type:"string"},lastUpdateTime:{type:"string"},message:{type:"string"},reason:{type:"string"},status:{type:"string",default:""},type:{type:"string",default:""}},title:"network.harvesterhci.io.v1beta1.Condition"}]}},networkIDs:{type:"array",items:{type:"integer",format:"int32",default:0}},networkLinkStatus:{type:"object",additionalProperties:{type:"object",required:["name"],properties:{index:{type:"integer",format:"int32"},mac:{type:"string"},masterIndex:{type:"integer",format:"int32"},name:{type:"string",default:""},promiscuous:{type:"boolean"},state:{type:"string"},type:{type:"string"}},title:"network.harvesterhci.io.v1beta1.LinkStatus"}},nics:{type:"array",items:{default:{},allOf:[{type:"object",required:["index","name","state","type"],properties:{index:{type:"integer",format:"int32",default:0},masterIndex:{type:"integer",format:"int32"},name:{type:"string",default:""},state:{type:"string",default:""},type:{type:"string",default:""},usedByManagementNetwork:{type:"boolean"},usedByVlanNetwork:{type:"boolean"}},title:"network.harvesterhci.io.v1beta1.NetworkInterface"}]}}},title:"network.harvesterhci.io.v1beta1.NodeNetworkStatus"}]}},title:"network.harvesterhci.io.v1beta1.NodeNetwork"}]}},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,s.kt)("span",{className:"openapi-schema__name"}," object"),(0,s.kt)("span",{className:"openapi-schema__divider"}),(0,s.kt)("span",{className:"openapi-schema__required"},"required"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)(p.Z,{collapsible:!1,name:"continue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"remainingItemCount",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"resourceVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"selfLink",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}))))))),(0,s.kt)(c.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(o.Z,{responseExample:'{\n  "apiVersion": "string",\n  "items": [\n    {\n      "apiVersion": "string",\n      "kind": "string",\n      "metadata": {\n        "name": "string",\n        "namespace": "string"\n      },\n      "spec": {\n        "description": "string",\n        "nic": "string",\n        "nodeName": "string",\n        "type": "string"\n      },\n      "status": {\n        "conditions": [\n          {\n            "lastTransitionTime": "string",\n            "lastUpdateTime": "string",\n            "message": "string",\n            "reason": "string",\n            "status": "string",\n            "type": "string"\n          }\n        ],\n        "networkIDs": [\n          0\n        ],\n        "networkLinkStatus": {},\n        "nics": [\n          {\n            "index": 0,\n            "masterIndex": 0,\n            "name": "string",\n            "state": "string",\n            "type": "string",\n            "usedByManagementNetwork": true,\n            "usedByVlanNetwork": true\n          }\n        ]\n      }\n    }\n  ],\n  "kind": "string",\n  "metadata": {\n    "continue": "string",\n    "remainingItemCount": 0,\n    "resourceVersion": "string",\n    "selfLink": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"})))),(0,s.kt)(c.default,{label:"application/yaml",value:"application/yaml",mdxType:"TabItem"},(0,s.kt)(d.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(c.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)(p.Z,{collapsible:!1,name:"apiVersion",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"items",required:!0,schemaName:"object[]",qualifierMessage:void 0,schema:{type:"array",items:{default:{},allOf:[{type:"object",required:["apiVersion","kind"],properties:{apiVersion:{type:"string"},kind:{type:"string"},metadata:{default:{},allOf:[{type:"object",required:["name"],properties:{name:{type:"string"},namespace:{type:"string"}},title:"k8s.io.v1.ObjectMeta"}]},spec:{default:{},allOf:[{type:"object",required:["nodeName"],properties:{description:{type:"string"},nic:{type:"string"},nodeName:{type:"string",default:""},type:{type:"string"}},title:"network.harvesterhci.io.v1beta1.NodeNetworkSpec"}]},status:{default:{},allOf:[{type:"object",properties:{conditions:{type:"array",items:{default:{},allOf:[{type:"object",required:["status","type"],properties:{lastTransitionTime:{type:"string"},lastUpdateTime:{type:"string"},message:{type:"string"},reason:{type:"string"},status:{type:"string",default:""},type:{type:"string",default:""}},title:"network.harvesterhci.io.v1beta1.Condition"}]}},networkIDs:{type:"array",items:{type:"integer",format:"int32",default:0}},networkLinkStatus:{type:"object",additionalProperties:{type:"object",required:["name"],properties:{index:{type:"integer",format:"int32"},mac:{type:"string"},masterIndex:{type:"integer",format:"int32"},name:{type:"string",default:""},promiscuous:{type:"boolean"},state:{type:"string"},type:{type:"string"}},title:"network.harvesterhci.io.v1beta1.LinkStatus"}},nics:{type:"array",items:{default:{},allOf:[{type:"object",required:["index","name","state","type"],properties:{index:{type:"integer",format:"int32",default:0},masterIndex:{type:"integer",format:"int32"},name:{type:"string",default:""},state:{type:"string",default:""},type:{type:"string",default:""},usedByManagementNetwork:{type:"boolean"},usedByVlanNetwork:{type:"boolean"}},title:"network.harvesterhci.io.v1beta1.NetworkInterface"}]}}},title:"network.harvesterhci.io.v1beta1.NodeNetworkStatus"}]}},title:"network.harvesterhci.io.v1beta1.NodeNetwork"}]}},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"kind",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details"},(0,s.kt)("summary",{style:{}},(0,s.kt)("span",{className:"openapi-schema__container"},(0,s.kt)("strong",{className:"openapi-schema__property"},"metadata"),(0,s.kt)("span",{className:"openapi-schema__name"}," object"),(0,s.kt)("span",{className:"openapi-schema__divider"}),(0,s.kt)("span",{className:"openapi-schema__required"},"required"))),(0,s.kt)("div",{style:{marginLeft:"1rem"}},(0,s.kt)(p.Z,{collapsible:!1,name:"continue",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"remainingItemCount",required:!1,schemaName:"int64",qualifierMessage:void 0,schema:{type:"integer",format:"int64"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"resourceVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,s.kt)(p.Z,{collapsible:!1,name:"selfLink",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}))))))),(0,s.kt)(c.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,s.kt)(o.Z,{responseExample:'{\n  "apiVersion": "string",\n  "items": [\n    {\n      "apiVersion": "string",\n      "kind": "string",\n      "metadata": {\n        "name": "string",\n        "namespace": "string"\n      },\n      "spec": {\n        "description": "string",\n        "nic": "string",\n        "nodeName": "string",\n        "type": "string"\n      },\n      "status": {\n        "conditions": [\n          {\n            "lastTransitionTime": "string",\n            "lastUpdateTime": "string",\n            "message": "string",\n            "reason": "string",\n            "status": "string",\n            "type": "string"\n          }\n        ],\n        "networkIDs": [\n          0\n        ],\n        "networkLinkStatus": {},\n        "nics": [\n          {\n            "index": 0,\n            "masterIndex": 0,\n            "name": "string",\n            "state": "string",\n            "type": "string",\n            "usedByManagementNetwork": true,\n            "usedByVlanNetwork": true\n          }\n        ]\n      }\n    }\n  ],\n  "kind": "string",\n  "metadata": {\n    "continue": "string",\n    "remainingItemCount": 0,\n    "resourceVersion": "string",\n    "selfLink": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))),(0,s.kt)(c.default,{label:"401",value:"401",mdxType:"TabItem"},(0,s.kt)("div",null,(0,s.kt)("p",null,"Unauthorized")),(0,s.kt)("div",null,(0,s.kt)(m.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,s.kt)(c.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,s.kt)(d.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(c.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"string"))))))),(0,s.kt)(c.default,{label:"application/json;stream=watch",value:"application/json;stream=watch",mdxType:"TabItem"},(0,s.kt)(d.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(c.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"string"))))))),(0,s.kt)(c.default,{label:"application/yaml",value:"application/yaml",mdxType:"TabItem"},(0,s.kt)(d.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,s.kt)(c.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,s.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,s.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,s.kt)("strong",null,"Schema")),(0,s.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,s.kt)("ul",{style:{marginLeft:"1rem"}},(0,s.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,s.kt)("p",null,"string"))))))))))))))}b.isMDXComponent=!0}}]);